version: "3.9"

services:
  postgres-db:
    image: postgres:13
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "5430:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - backend

  gestorfacturacion-1:
    build:
      context: ./GestorFacturacion
    depends_on:
      - postgres-db
    ports:
      - "5001:5000"
    environment:
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_HOST=postgres-db
      - DB_PORT=5432
      - DB_NAME=postgres
      - IdentificadorMC=1
    networks:
      - backend

  gestorfacturacion-2:
    build:
      context: ./GestorFacturacion
    depends_on:
      - postgres-db
    ports:
      - "5002:5000"
    environment:
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_HOST=postgres-db
      - DB_PORT=5432
      - DB_NAME=postgres
      - IdentificadorMC=2
    networks:
      - backend
  
  gestorfacturacion-3:
    build:
      context: ./GestorFacturacion
    depends_on:
      - postgres-db
    ports:
      - "5003:5000"
    environment:
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_HOST=postgres-db
      - DB_PORT=5432
      - DB_NAME=postgres
      - IdentificadorMC=3
    networks:
      - backend

  redis:
    image: "redis:alpine"
    ports:
      - "6379:6379"
    networks:
      - backend

  celery-worker:
    build: ./ColaSolicitudes
    depends_on:
      - redis
    environment:
      - Redis_HOST=redis
      - Redis_PORT=6379
      - MC1_HOST=gestorfacturacion-1
      - MC1_PORT=5000
      - MC2_HOST=gestorfacturacion-2
      - MC2_PORT=5000
      - MC3_HOST=gestorfacturacion-3
      - MC3_PORT=5000
    networks:
      - backend


  apigateway:
    build: ./APIGateway
    ports:
      - "5000:5000"
    environment:
      - Redis_HOST=redis
    networks:
      - backend


networks:
  backend:
    driver: bridge

volumes:
  postgres_data: